{
	"info": {
		"_postman_id": "6c71f353-d4dc-4b57-b7b6-76738a29b689",
		"name": "TC-T675",
		"description": "API's to change status (en route, abandon, complete) on a batch of accepted jobs so that I can change the status of multiple jobs at one time\n\nWhen a driver starts their route, they will be able to batch all jobs to be en route\nWhen a driver starts their route, they can search or filter a set of “accepted jobs” and batch change those to en route\nWhen a driver completes a set of jobs they are able to search or filter on a set of “en route” jobs and batch complete those jobs\nIf a driver can’t get to a street or needs to abandon all their remaining jobs, they can search or filter or select all and batch abandon the jobs\n\nNote that the PROOF of delivery should be turned off on the merchant.  Running in Dev under GoodnightDeliveries",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TC-T675 batch change Status  Negative tests",
			"item": [
				{
					"name": "Driver Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "879d31b7-61a4-4abb-8f53-506cfac8e39d",
								"exec": [
									"// Load Postman BDD",
									"",
									"",
									"eval(globals.postmanBDD);",
									"",
									"",
									"describe (\"Base e2e: Driver login\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"      ",
									"    });",
									"    ",
									"var result = pm.response.json().result;",
									"var driverkey = \"\";",
									"",
									"",
									"if (result)",
									"{",
									"    ",
									"    driverkey = result.userKey;",
									"",
									"}",
									"",
									"pm.environment.set(\"driverkey\", driverkey);",
									"",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ApiKey\": \"6B4C3AD2-517C-47C9-8293-E89DE04FA7FC\",\n\t\"Email\": \"cgoodnight+100@mailinator.com\",\n\t\"Password\": \"getswift\"\n}\n\n\n"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver go Online",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "785a71f6-9146-4ff9-946a-f2dd665636b5",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Make driver go online\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isOnline\").and.equal (true);",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\": \"{{driverkey}}\",\r\n  \"ApiKey\": \"6B4C3AD2-517C-47C9-8293-E89DE04FA7FC\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/goOnline",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"goOnline"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Driver Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7679ff6-0ca0-47d4-b78a-69026d084c40",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"setLocation endpoint\", function(){",
									"    it (\"should put driver into correct location\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        // assert driver identifer",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "399a27aa-91cb-433f-a161-f5406d98b3c7",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"var startDateWithHHMMSS = isoStartDate+\" 03:34:29\";",
									"postman.setEnvironmentVariable(\"todaysDate\", startDateWithHHMMSS);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\":\"{{driverkey}}\",\r\n  \"ApiKey\":\"{{privateApiKey}}\",\r\n  \"latitude\":39.60,\r\n  \"longitude\":-104.9,\r\n  \"At\":\"{{todaysDate}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/setLocation",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"setLocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the first job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"firstjobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"firstjobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of the first job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{firstjobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the first job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{firstjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the second job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"jobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of the second Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{jobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the second Job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{jobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the third job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"thirdjobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"thirdjobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of  third Job Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{thirdjobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the third Job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change third job status to atPickUp",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Chagne status to atPickUp\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									" ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/atPickup",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"atPickup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change third job status to enRoute",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Chagne status to atPickUp\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									" ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\",\r\n\t\"NewStage\": \"PickedUp\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/advanceJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"advanceJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change third job status Complete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Chagne status to atPickUp\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									" ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\",\r\n    \"CompletionStage\": \"Completed\",\r\n\t\"Notes\": \"Chris - Your API Test job is completed now. Congrats!!\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/completeJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"completeJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Abandon jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 207\", function(){",
									"        response.should.have.status(207);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Abandoned \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Abandoned \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third Job is already completed sucess so abandon should fail\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(false);",
									"    pm.expect(jsonData.results[2].errorMessage).to.eql(\"Job is not in correct stage\");",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"abandonRequests\": [\n    {\n      \"identifier\": \"{{firstjobId}}\",\n      \"reason\": \"Abandoning the first job\"\n    },\n     {\n      \"identifier\": \"{{jobId}}\",\n      \"reason\": \"Abandoning the second job\"\n    },\n    {\n      \"identifier\": \"{{thirdjobId}}\",\n      \"reason\": \"Abandoning the third job\"\n    }\n  ],\n  \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/abandonJobBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"abandonJobBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the first job Again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{firstjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the second Job Again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{jobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk at Pickup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(207);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third Job was already picked up\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(false);",
									"    pm.expect(jsonData.results[2].errorMessage).to.eql(\"Job already picked up\");",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifiers\": [\n      \"{{firstjobId}}\",\n      \"{{jobId}}\",\n      \"{{thirdjobId}}\"\n  ],\n  \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/atPickupBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"atPickupBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  Second Job After Picked up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Accepted\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{jobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track First Job After Picked up Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"enRoute\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Accepted\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{firstjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{firstjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track third Job After Picked up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"enRoute\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{thirdjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{thirdjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk at Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(207);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third job is already completed\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(false);",
									"    pm.expect(jsonData.results[2].errorMessage).to.eql(\"Job already finished\");",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobs\": [\n    {\n      \"identifier\": \"{{firstjobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"First Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    },\n     {\n      \"identifier\": \"{{jobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"Second Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    }, {\n      \"identifier\": \"{{thirdjobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"Third Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    }\n  ],\n    \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/completeJobBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"completeJobBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  Second Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{jobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  First Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{firstjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{firstjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track Third Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{thirdjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{thirdjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver go Offline with reason Base Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "785a71f6-9146-4ff9-946a-f2dd665636b5",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Make driver go offline\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isOnline\").and.equal (false);",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\": \"{{driverkey}}\",\r\n  \"ApiKey\": \"{{privateApiKey}}\",\r\n  \"OfflineReasonId\": \"It is time to go home\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/goOffline",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"goOffline"
							]
						}
					},
					"response": []
				}
			],
			"description": "API's to change status (en route, abandon, complete) on a batch of accepted jobs so that I can change the status of multiple jobs at one time\n\nWhen a driver starts their route, they will be able to batch all jobs to be en route\nWhen a driver starts their route, they can search or filter a set of “accepted jobs” and batch change those to en route\nWhen a driver completes a set of jobs they are able to search or filter on a set of “en route” jobs and batch complete those jobs\nIf a driver can’t get to a street or needs to abandon all their remaining jobs, they can search or filter or select all and batch abandon the jobs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a6421753-c2f0-4ead-ac54-a1d48ce9630b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "92d2bb62-4b22-4f33-bd60-9b00eb76bc69",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TC-T675 batch change Status",
			"item": [
				{
					"name": "Driver Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "879d31b7-61a4-4abb-8f53-506cfac8e39d",
								"exec": [
									"// Load Postman BDD",
									"",
									"",
									"eval(globals.postmanBDD);",
									"",
									"",
									"describe (\"Base e2e: Driver login\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"      ",
									"    });",
									"    ",
									"var result = pm.response.json().result;",
									"var driverkey = \"\";",
									"",
									"",
									"if (result)",
									"{",
									"    ",
									"    driverkey = result.userKey;",
									"",
									"}",
									"",
									"pm.environment.set(\"driverkey\", driverkey);",
									"",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ApiKey\": \"6B4C3AD2-517C-47C9-8293-E89DE04FA7FC\",\n\t\"Email\": \"cgoodnight+100@mailinator.com\",\n\t\"Password\": \"getswift\"\n}\n\n\n"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/account/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver go Online",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "785a71f6-9146-4ff9-946a-f2dd665636b5",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Make driver go online\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isOnline\").and.equal (true);",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\": \"{{driverkey}}\",\r\n  \"ApiKey\": \"6B4C3AD2-517C-47C9-8293-E89DE04FA7FC\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/goOnline",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"goOnline"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Driver Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7679ff6-0ca0-47d4-b78a-69026d084c40",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"setLocation endpoint\", function(){",
									"    it (\"should put driver into correct location\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        // assert driver identifer",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "399a27aa-91cb-433f-a161-f5406d98b3c7",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"var startDateWithHHMMSS = isoStartDate+\" 03:34:29\";",
									"postman.setEnvironmentVariable(\"todaysDate\", startDateWithHHMMSS);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\":\"{{driverkey}}\",\r\n  \"ApiKey\":\"{{privateApiKey}}\",\r\n  \"latitude\":39.60,\r\n  \"longitude\":-104.9,\r\n  \"At\":\"{{todaysDate}}\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/setLocation",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"setLocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the first job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"firstjobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"firstjobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of the first job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{firstjobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the first job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{firstjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the second job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"jobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of the second Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{jobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the second Job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{jobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create the third job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"// UTC ",
									"var date = new Date();",
									"date.setHours(date.getHours());",
									"var utcTime = date.toISOString().slice(0, 19);",
									"date.setMinutes(date.getMinutes()+20);",
									"var extraMin=  date.toISOString().slice(0, 19);",
									"console.log (utcTime);",
									"// // 2019-02-14T16:16:19",
									"postman.setEnvironmentVariable(\"pickupTime\", utcTime);",
									"postman.setEnvironmentVariable(\"earliestTime\", utcTime);",
									"postman.setEnvironmentVariable(\"latestTime\", extraMin);",
									"",
									"var moment = require('moment');",
									"var refNum = \"Base_API_TEST\";",
									"postman.setEnvironmentVariable(\"jobReferenceId\", refNum+moment().format());",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Create a new job to cancel\", function(){",
									"    it (\"should return referanceId\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        postman.setEnvironmentVariable (\"thirdjobId\", response.body.delivery.id);",
									"         postman.setEnvironmentVariable (\"thirdjobNumber\", response.body.delivery.reference);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"apiKey\": \"{{merchantKey}}\",\r\n  \"booking\": {\r\n    \"deliveryInstructions\": \"Handle with care\",\r\n    \"itemsRequirePurchase\": false,\r\n    \"items\": [\r\n      {\r\n        \"quantity\": 10,\r\n        \"sku\": \"sample string 52\",\r\n        \"description\": \"Sample Item\",\r\n        \"price\": 4.0\r\n      },\r\n      {\r\n        \"quantity\": 1,\r\n        \"sku\": \"sample string 2\",\r\n        \"description\": \"sample string 3\",\r\n        \"price\": 4.0\r\n      }\r\n    ],\r\n    \"pickupTime\": \"2017-02-16T15:56:29.1946623+11:00\",\r\n    \"pickupDetail\": {\r\n      \"name\": \"Cash on Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"9555 E Arapahoe Rd, Greenwood Village, CO 80112, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n    \"dropoffDetail\": {\r\n      \"name\": \"Cash On Delivery\",\r\n      \"phone\": \"+61408399111\",\r\n      \"address\": \"955 W Peakview Cir, Littleton, CO 80120, USA\",\r\n      \"email\": \"grumpy@mailinator.com\"\r\n    },\r\n\r\n    \"customerFee\": 4.0,\r\n    \"customerReference\": \"sample string 5\",\r\n    \"tax\": 1.0,\r\n    \"taxInclusivePrice\": false,\r\n    \"tip\": 1.0,\r\n    \"driverFeePercentage\": 6.0,\r\n    \"driverMatchCode\": \"sample string 7\",\r\n    \"deliverySequence\": 8,\r\n    \"deliveryRouteIdentifier\":\"\",\r\n    \"Template\":\"HIVEYB\",\r\n    \"OrderPrice\": 9,\r\n    \"Payments\": [{\"method\":\"CashOnDelivery\",\"amount\":9 }],\r\n    \"webhooks\": [\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      },\r\n      {\r\n        \"eventName\": \"sample string 1\",\r\n        \"url\": \"sample string 2\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Notify of  third Job Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f41db705-8ac7-4985-b09a-c93adeacc008",
								"exec": [
									"",
									"",
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"var result = pm.response.json().result;",
									"describe (\"Driver should get notification\", function(){",
									"    it (\"Driver Should get notification\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        ",
									"     ",
									"        ",
									"    });",
									"    ",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"apiKey\": \"{{merchantKey}}\",\n   \"driverIdentifier\" : \"{{driverkey}}\",\n   \"jobId\" : {{thirdjobNumber}}\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersion}}/dispatch",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"dispatch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the third Job",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Abandon jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Abandoned \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Abandoned \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third Job is Abandoned \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(true);",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"abandonRequests\": [\n    {\n      \"identifier\": \"{{firstjobId}}\",\n      \"reason\": \"Abandoning the first job\"\n    },\n     {\n      \"identifier\": \"{{jobId}}\",\n      \"reason\": \"Abandoning the second job\"\n    },\n    {\n      \"identifier\": \"{{thirdjobId}}\",\n      \"reason\": \"Abandoning the third job\"\n    }\n  ],\n  \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/abandonJobBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"abandonJobBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the first job Again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{firstjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the second Job Again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{jobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Accept the third Job Again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "107d8cad-514e-424d-9e4e-a7ddc0617e4b",
								"exec": [
									"var today = new Date();",
									"var startDatetime = new Date(new Date().setDate(today.getDate()));",
									"var isoStartDate = startDatetime.toISOString().split('T')[0];",
									"",
									"var endDatetime = new Date(new Date().setDate(today.getDate()+1));",
									"var isoFutureDate = endDatetime.toISOString().split('T')[0];",
									"",
									"",
									"// Date with miliseconds",
									"var d = new Date();",
									"var h = addZero(d.getHours(), 2);",
									"var m = addZero(d.getMinutes(), 2);",
									"var s = addZero(d.getSeconds(), 2);",
									"var ms = addZero(d.getMilliseconds(),3);",
									"var withoutMs = h + \":\" + m + \":\" + s;",
									"var fullDate = h + \":\" + m + \":\" + s + \":\" + ms;",
									"var refNum = isoStartDate+fullDate;",
									"postman.setEnvironmentVariable(\"refNum\", refNum);",
									"",
									"",
									"var ref = \"API_AUTO_\";",
									"var fullReferanceId = ref+refNum;",
									"postman.setEnvironmentVariable(\"jobReferenceId\", fullReferanceId);",
									"",
									"postman.setEnvironmentVariable(\"pickupTime\", isoStartDate+\"T\"+withoutMs+\".401236+00:00\");",
									"postman.setEnvironmentVariable(\"earliestTime\", isoFutureDate+\"T\"+withoutMs+\".451236+00:00\");",
									"postman.setEnvironmentVariable(\"latestTime\", isoFutureDate+\"T\"+withoutMs+\".481236+00:00\");",
									"",
									"",
									"",
									"function addZero(x, n) {",
									"    while (x.toString().length < n) {",
									"        x = \"0\" + x;",
									"    }",
									"    return x;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1627cc8f-fa5b-4ba0-89b6-ae838252436f",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Base e2e: Accept job by driver\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"UserKey\": \"{{driverkey}}\",\r\n\t\"ApiKey\": \"{{privateApiKey}}\",\r\n\t\"Identifier\": \"{{thirdjobId}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/TransportJob/acceptJob",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"TransportJob",
								"acceptJob"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk at Pickup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third Job is Pickedup\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(true);",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifiers\": [\n      \"{{firstjobId}}\",\n      \"{{jobId}}\",\n      \"{{thirdjobId}}\"\n  ],\n  \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/atPickupBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"atPickupBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  Second Job After Picked up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Accepted\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{jobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track First Job After Picked up Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"enRoute\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Accepted\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{firstjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{firstjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track third Job After Picked up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"enRoute\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Accepted\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{thirdjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{thirdjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk at Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2fe74f9-20fd-4b8b-9439-a2151e2ef133",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Bulk Abandon test\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        //postman.setEnvironmentVariable (\"jobId\", response.body.delivery.id);",
									"        ",
									"    });",
									"      pm.test(\"First Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[0].success).to.eql(true);",
									"});",
									"     pm.test(\"Second Job is Pickedup \", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[1].success).to.eql(true);",
									"});",
									" pm.test(\"Third Job is Pickedup\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    ",
									"    pm.expect(jsonData.results[2].success).to.eql(true);",
									"});",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobs\": [\n    {\n      \"identifier\": \"{{firstjobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"First Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    },\n     {\n      \"identifier\": \"{{jobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"Second Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    }, {\n      \"identifier\": \"{{thirdjobId}}\",\n      \"cancellationReason\": \"CardMismatch\",\n      \"completionStage\": \"Completed\",\n      \"notes\": \"Third Job Completed by API\",\n      \"payments\": [\n        {\n          \"method\": \"CashOnDelivery\",\n          \"amount\": 9\n        }\n      ]\n    }\n  ],\n    \"apiKey\": \"{{privateApiKey}}\",\n  \"userKey\": \"{{driverkey}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/mobile/v1/transportJob/completeJobBulk",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobile",
								"v1",
								"transportJob",
								"completeJobBulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  Second Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{jobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track  First Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{firstjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{firstjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Track Third Job Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd37731-3574-4b01-85cb-1ed208135ad6",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"en-route\", function(){",
									"    it (\"should change to PickedUp\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.should.have.property(\"currentStatus\").and.equal (\"Completed\");",
									"        ",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dac75e91-5254-4a39-bb76-e96bbd529aa5",
								"exec": [
									"setTimeout (function () {}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/{{apiVersion}}/deliveries/{{thirdjobId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersion}}",
								"deliveries",
								"{{thirdjobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver go Offline with reason Base Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "785a71f6-9146-4ff9-946a-f2dd665636b5",
								"exec": [
									"// Load Postman BDD",
									"eval(globals.postmanBDD);",
									"",
									"describe (\"Make driver go offline\", function(){",
									"    it (\"should return 200\", function(){",
									"        response.should.have.status(200);",
									"        response.should.be.json;",
									"        response.body.should.not.be.empty;",
									"        response.should.have.header('content-type', 'application/json; charset=utf-8');",
									"        response.body.result.should.have.property(\"isOnline\").and.equal (false);",
									"        response.body.result.should.have.property(\"isActive\").and.equal (true);",
									"    });",
									"    ",
									"    ",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserKey\": \"{{driverkey}}\",\r\n  \"ApiKey\": \"{{privateApiKey}}\",\r\n  \"OfflineReasonId\": \"It is time to go home\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{url}}/{{apiVersionMobile}}/handler/goOffline",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{apiVersionMobile}}",
								"handler",
								"goOffline"
							]
						}
					},
					"response": []
				}
			],
			"description": "API's to change status (en route, abandon, complete) on a batch of accepted jobs so that I can change the status of multiple jobs at one time\n\nWhen a driver starts their route, they will be able to batch all jobs to be en route\nWhen a driver starts their route, they can search or filter a set of “accepted jobs” and batch change those to en route\nWhen a driver completes a set of jobs they are able to search or filter on a set of “en route” jobs and batch complete those jobs\nIf a driver can’t get to a street or needs to abandon all their remaining jobs, they can search or filter or select all and batch abandon the jobs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a6421753-c2f0-4ead-ac54-a1d48ce9630b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "92d2bb62-4b22-4f33-bd60-9b00eb76bc69",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "25182ce2-6585-4d0c-bb24-5cfb4d5aff31",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a5fd084b-6e22-4450-aef5-1a7a54344460",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}